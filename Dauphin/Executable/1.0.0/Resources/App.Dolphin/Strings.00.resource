<?xml version="1.0" encoding="utf-8"?>
<bundle name="Strings" type="String" culture="fr">
  <data name="Window.Title" id="2">Dauphin</data>
  <data name="Window.Copyright" id="21">© EPSITEC SA</data>
  <data name="Command.New.Tooltip" id="22">Nouveau programme</data>
  <data name="Command.Open.Tooltip" id="23">Ouvre un programme binaire .dolphin</data>
  <data name="Command.Save.Tooltip" id="24">Enregistre le programme binaire .dolphin</data>
  <data name="Command.About.Tooltip" id="25">A propos du Simulateur de Dauphin</data>
  <data name="Command.Look.Tooltip" id="26">Change l&amp;apos;aspect de l&amp;apos;interface</data>
  <data name="TabPage.Bus.Button" id="27">BUS</data>
  <data name="TabPage.Detail.Button" id="28">CPU+MEM</data>
  <data name="TabPage.Code.Button" id="29">CODE</data>
  <data name="TabPage.Calm.Button" id="2A">SOURCE</data>
  <data name="TabPage.Quick.Button" id="2B">TURBO</data>
  <data name="TabPage.Bus.Tooltip" id="2C">Montre les bus d&amp;apos;adresse et de données</data>
  <data name="TabPage.Code.Tooltip" id="2D">Montre les instructions du processeur</data>
  <data name="TabPage.Detail.Tooltip" id="2E">Montre les registres du processeur et la mémoire</data>
  <data name="TabPage.Quick.Tooltip" id="2F">Panneau vide (vitesse maximale)</data>
  <data name="TabPage.Calm.Tooltip" id="2G">Assembleur</data>
  <data name="Bus.Title.Data" id="2H">Bus de données</data>
  <data name="Bus.Title.Address" id="2I">Bus d&amp;apos;adresse</data>
  <data name="Code.Title.Data" id="2J">Codage des instructions</data>
  <data name="Code.PC.Button" id="2K">PC</data>
  <data name="Code.PC.Tooltip" id="2L">Montre automatiquement l&amp;apos;adresse pointée par le registre PC</data>
  <data name="Code.RAM.Button" id="2M">RAM</data>
  <data name="Code.RAM.Tooltip" id="2N">Montre le début de la mémoire vive (RAM)</data>
  <data name="Code.ROM.Button" id="2O">ROM</data>
  <data name="Code.ROM.Tooltip" id="2P">Montre le début de la mémoire morte (ROM)</data>
  <data name="Code.Sub.Tooltip" id="2Q">Supprime l&amp;apos;instruction sélectionnée</data>
  <data name="Code.Add.Tooltip" id="2R">Ajoute un NOP avant l&amp;apos;instruction sélectionnée</data>
  <data name="Bus.Title.Register" id="2S">Registres du microprocesseur</data>
  <data name="Calm.Title.Main" id="2T">Source</data>
  <data name="Calm.Open.Tooltip" id="2U">Importe un programme source .txt</data>
  <data name="Calm.Save.Tooltip" id="2V">Exporte le programme source .txt</data>
  <data name="Calm.Show.Tooltip" id="201">Montre les caractères spéciaux</data>
  <data name="Calm.Big.Tooltip" id="211">Grande police</data>
  <data name="Calm.Full.Tooltip" id="221">Plein écran</data>
  <data name="Calm.Ass.Button" id="231">ASSEMBLER</data>
  <data name="Calm.Ass.Tooltip" id="241">Assemble le programme</data>
  <data name="Calm.Err.Tooltip" id="251">Cherche l&amp;apos;erreur suivante</data>
  <data name="Calm.Err.Button" id="261">ERR</data>
  <data name="Quick.Title.Main" id="271">Turbo</data>
  <data name="Quick.Label.Default" id="281">&lt;i&gt;Vide, pour permettre une exécution à vitesse maximale&lt;/i&gt;</data>
  <data name="Detail.Title.Memory" id="291">Mémoire</data>
  <data name="Detail.Title.Register" id="2A1">Registres du microprocesseur</data>
  <data name="Detail.PC.Button" id="2B1">PC</data>
  <data name="Detail.PC.Tooltip" id="2C1">Montre automatiquement l&amp;apos;adresse pointée par le registre PC</data>
  <data name="Detail.RAM.Tooltip" id="2D1">Montre le début de la mémoire vive (RAM)</data>
  <data name="Detail.RAM.Button" id="2E1">RAM</data>
  <data name="Detail.ROM.Button" id="2F1">ROM</data>
  <data name="Detail.ROM.Tooltip" id="2G1">Montre le début de la mémoire morte (ROM)</data>
  <data name="Detail.Periph.Tooltip" id="2H1">Montre le début de la zone des périphériques</data>
  <data name="Detail.Periph.Button" id="2I1">PER</data>
  <data name="Detail.Display.Button" id="2J1">DIS</data>
  <data name="Detail.Display.Tooltip" id="2K1">Montre le début de la zone de l&amp;apos;écran bitmap</data>
  <data name="Detail.Reset.Tooltip" id="2L1">Remise à zéro du processeur</data>
  <data name="Detail.Reset.Button" id="2M1">RESET</data>
  <data name="Code.Title.Register" id="2N1">Registres du microprocesseur</data>
  <data name="Command.Run.Tooltip" id="2O1">Run/Stop</data>
  <data name="Command.Clock6.Tooltip" id="2P1">1&amp;apos;000&amp;apos;000 instructions/seconde</data>
  <data name="Command.Clock6.Button" id="2Q1">1M</data>
  <data name="Command.Clock5.Button" id="2R1">100&amp;apos;000</data>
  <data name="Command.Clock4.Button" id="2S1">10&amp;apos;000</data>
  <data name="Command.Clock3.Button" id="2T1">1&amp;apos;000</data>
  <data name="Command.Clock2.Button" id="2U1">100</data>
  <data name="Command.Clock1.Button" id="2V1">10</data>
  <data name="Command.Clock0.Button" id="202">1</data>
  <data name="Command.Clock1.Tooltip" id="212">10 instructions/seconde</data>
  <data name="Command.Clock2.Tooltip" id="222">100 instructions/seconde</data>
  <data name="Command.Clock3.Tooltip" id="232">1&amp;apos;000 instructions/seconde</data>
  <data name="Command.Clock4.Tooltip" id="242">10&amp;apos;000 instructions/seconde</data>
  <data name="Command.Clock5.Tooltip" id="252">100&amp;apos;000 instructions/seconde</data>
  <data name="Command.Clock0.Tooltip" id="262">1 instruction/seconde</data>
  <data name="Command.SwitchStep.No" id="272">CONT</data>
  <data name="Command.SwitchStep.Yes" id="282">STEP</data>
  <data name="Command.SwitchStep.Tooltip" id="292">Mode &amp;quot;Continuous&amp;quot; ou &amp;quot;Step&amp;quot;</data>
  <data name="Command.Step.Tooltip" id="2A2">Avance d&amp;apos;un pas (step)</data>
  <data name="Command.Step.Button" id="2B2">S</data>
  <data name="Command.SwitchInto.No" id="2C2">OVER</data>
  <data name="Command.SwitchInto.Tooltip" id="2D2">Mode &amp;quot;Step Over&amp;quot; ou &amp;quot;Step Into&amp;quot; lors d&amp;apos;un CALL</data>
  <data name="Command.SwitchInto.Yes" id="2E2">INTO</data>
  <data name="Command.Write.Tooltip" id="2F2">Ecriture en mémoire (write)</data>
  <data name="Command.Read.Tooltip" id="2G2">Lecture en mémoire (read)</data>
  <data name="Command.Write.Button" id="2H2">W</data>
  <data name="Command.Read.Button" id="2I2">R</data>
  <data name="Command.Run.Button" id="2J2">RUN</data>
  <data name="Command.Stop.Button" id="2K2">STOP</data>
  <data name="Command.Display.Techno.CRT.Button" id="2L2">CRT</data>
  <data name="Command.Display.Techno.LCD.Button" id="2M2">LCD</data>
  <data name="Command.Keyboard.Arrows.Button" id="2N2">ARR</data>
  <data name="Command.Keyboard.Numeric.Button" id="2O2">NUM</data>
  <data name="Dialog.Open.Title" id="2P2">Ouverture d&amp;apos;un programme binaire</data>
  <data name="Dialog.Save.Title" id="2Q2">Enregistrement d&amp;apos;un programme binaire</data>
  <data name="Dialog.File.Programs" id="2R2">Programmes</data>
  <data name="Dialog.AutoSave.Question1" id="2S2">Voulez-vous enregistrer le programme ?</data>
  <data name="Dialog.AutoSave.Question2" id="2T2">Voulez-vous enregistrer &lt;b&gt;{0}&lt;/b&gt; ?</data>
  <data name="Error.Open" id="2U2">Impossible d&amp;apos;ouvrir le fichier.</data>
  <data name="Error.Read.Version" id="2V2">Ce fichier a été réalisé avec une version plus récente.</data>
  <data name="Error.Read.Format" id="203">Le format du fichier est incorrect.</data>
  <data name="Error.Save" id="213">Impossible d&amp;apos;écrire le fichier.</data>
  <data name="Dialog.OpenCalm.Title" id="223">Importation d&amp;apos;un programme source</data>
  <data name="Dialog.SaveCalm.Title" id="233">Exportation d&amp;apos;un programme source</data>
  <data name="Question.Assembler.Do" id="243">Voulez-vous assembler le programme source ?</data>
  <data name="Question.Assembler.Ok" id="253">Le source ne contient aucune erreur.</data>
  <data name="Window.ApplicationTitle" id="263">Simulateur de Dauphin</data>
  <data name="Window.Comment" id="273">&lt;br/&gt;&lt;i&gt;Tapez ici les commentaires sur le programme...&lt;/i&gt;</data>
  <data name="TabPage.Right.Program.Button" id="283">Comment</data>
  <data name="Command.Italic.Tooltip" id="293">Italique</data>
  <data name="Command.Underlined.Tooltip" id="2A3">Souligné</data>
  <data name="Command.Bold.Tooltip" id="2B3">Gras</data>
  <data name="Dialog.About.Message" id="2C3">Ce logiciel a été créé par :&lt;br/&gt;Daniel Roux&lt;br/&gt;EPSITEC SA&lt;br/&gt;{0}&lt;br/&gt;&lt;br/&gt;Vous pouvez télécharger le manuel ici :&lt;br/&gt;{1}&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Version {2}&lt;/b&gt;</data>
  <data name="Dialog.OK.Button" id="2D3">OK</data>
  <data name="Dialog.Download.Title" id="2E3">Télécharger une mise à jour</data>
  <data name="Dialog.Download.UpToDate" id="2F3">Votre logiciel est à jour.</data>
  <data name="Dialog.Download.UpdateAvailable" id="2G3">Une mise à jour est disponible:</data>
  <data name="Dialog.Download.CurrentVersion" id="2H3">Version actuelle {0}</data>
  <data name="Dialog.Download.NoUpdate" id="2I3">Aucune mise à jour n&amp;apos;est disponible</data>
  <data name="Dialog.Download.UpdateFound" id="2J3">Mise à jour {0}</data>
  <data name="Dialog.Close.Button" id="2K3">Fermer</data>
  <data name="Command.Display.Active.Button" id="2L3">DISPLAY</data>
  <data name="Command.Display.Clear.Button" id="2M3">CLS</data>
  <data name="Command.Keyboard.Tooltip" id="2N3">Type du clavier &amp;quot;Numeric&amp;quot; ou &amp;quot;Arrows&amp;quot;</data>
  <data name="Command.Display.Active.Tooltip" id="2O3">Montre ou cache l&amp;apos;écran bitmap</data>
  <data name="Command.Display.Techno.Tooltip" id="2P3">Type de l&amp;apos;écran bitmap</data>
  <data name="Command.Display.Clear.Tooltip" id="2Q3">Efface l&amp;apos;écran bitmap</data>
  <data name="Assembler.Message.Empty" id="2R3">&lt;b&gt;Le programme ne contient aucune instruction.&lt;/b&gt;</data>
  <data name="Assembler.Message.OK" id="2S3">&lt;b&gt;Assemblage correct de {0} instruction(s) pour un total de {1} octet(s).&lt;/b&gt;&lt;br/&gt;Cliquez le bouton [RUN] pour exécuter le programme.</data>
  <data name="Assembler.Message.Error" id="2T3">&lt;b&gt;Il y a eu {0} erreur(s) lors de l&amp;apos;assemblage.&lt;/b&gt;</data>
  <data name="Assembler.Pseudo.Error.Title" id="2U3">Il manque le texte du titre.</data>
  <data name="Assembler.Pseudo.Error.Loc" id="2V3">.LOC doit être suivi d&amp;apos;une adresse.</data>
  <data name="Assembler.Pseudo.Error.End" id="204">Il ne peut pas y avoir d&amp;apos;argument.</data>
  <data name="Assembler.Pseudo.Error.Default" id="214">Pseudo-instruction inconnue.</data>
  <data name="Assembler.Var.Error.Register" id="224">Il n&amp;apos;est pas possible d&amp;apos;utiliser un nom de registre.</data>
  <data name="Assembler.Var.Error.Name" id="234">Nom de variable incorrect.</data>
  <data name="Assembler.Var.Error.Redefine" id="244">Variable ou étiquette déjà définie.</data>
  <data name="Assembler.Var.Error.NoRegister" id="254">Il n&amp;apos;est pas possible d&amp;apos;utiliser un nom de registre.</data>
  <data name="Assembler.Var.Error.WrongLabel" id="264">Nom d&amp;apos;étiquette incorrect.</data>
  <data name="Assembler.Var.Error.LabelRedefine" id="274">Variable ou étiquette déjà définie.</data>
  <data name="Assembler.Instruction.Error.Overflow" id="284">Valeur hors limites.</data>
  <data name="Assembler.Instruction.Error.RelOverflow" id="294">Déplacement relatif trop grand.</data>
  <data name="Assembler.Expression.Error.Generic" id="2A4">Expression incorrecte</data>
  <data name="Assembler.Expression.Error.Unary" id="2B4">Opération unaire inconnue.</data>
  <data name="Assembler.Expression.Error.Binary.DivZero" id="2C4">Division par zéro.</data>
  <data name="Assembler.Expression.Error.Binary.Generic" id="2D4">Opération binaire inconnue.</data>
  <data name="Assembler.Value.Error.Undefined" id="2E4">Variable &amp;quot;{0}&amp;quot; indéfinie.</data>
  <data name="Assembler.Number.Error.Decimal" id="2F4">Nombre décimal incorrect (H&amp;apos; si hexa).</data>
  <data name="Assembler.Number.Error.Hexa" id="2G4">Nombre hexa incorrect.</data>
  <data name="Assembler.Number.Error.Binary" id="2H4">Nombre binaire incorrect.</data>
  <data name="Assembler.Number.Error.Generic" id="2I4">D&amp;apos; = décimal, H&amp;apos; = hexa et B&amp;apos; = binaire.</data>
  <data name="Dialog.CodeAccessor.Shift.Message" id="2J4">&lt;b&gt;La mémoire a été décalée de {0} octet(s) à partir de l&amp;apos;adresse {1}h.&lt;/b&gt;&lt;br/&gt;N&amp;apos;oubliez pas d&amp;apos;adapter les adresses des instructions ayant un argument &lt;i&gt;ADDR&lt;/i&gt; (JUMP, MOVE, etc.).</data>
  <data name="Processor.Error.ZeroArg" id="2O4">L&amp;apos;instuction {0} n&amp;apos;a aucun argument.</data>
  <data name="Processor.Error.Table.Generic" id="2Q4">TABLE doit être suivi d&amp;apos;une valeur immédiate correspondant au nombre de BYTE contenus dans la table.</data>
  <data name="Processor.Error.Byte.Generic" id="2R4">BYTE doit être suivi d&amp;apos;une valeur immédiate correspondant à l&amp;apos;octet contenu dans la table.</data>
  <data name="Processor.Error.AddressMissing" id="2S4">{0} doit être suivi d&amp;apos;une adresse.</data>
  <data name="Processor.Error.RegisterMissing" id="2U4">{0} doit être suivi d&amp;apos;un nom de registre.</data>
  <data name="Processor.Error.RegisterOrAddressMissing" id="2V4">{0} doit être suivi d&amp;apos;un nom de registre ou d&amp;apos;une adresse.</data>
  <data name="Processor.Error.Swap.Generic" id="205">SWAP doit être suivi d&amp;apos;un nom de registre (A ou B).</data>
  <data name="Processor.Error.Arguments" id="215">Les arguments de l&amp;apos;instruction {0} sont incorrects.</data>
  <data name="Processor.Error.Generic" id="225">&lt;b&gt;Instruction inconnue.&lt;/b&gt;&lt;br/&gt;&lt;br/&gt;Les instructions connues sont :&lt;br/&gt;{0}JUMP, CALL, RET, PUSH, POP&lt;br/&gt;{0}MOVE, COMP, ADD, SUB, AND, OR, XOR&lt;br/&gt;{0}CLR, NOT, INC, DEC, RL, RR, RLC, RRC&lt;br/&gt;{0}TEST, TSET, TCLR, TNOT&lt;br/&gt;{0}NOP, CLRC, SETC, NOTC, EX, SWAP, HALT&lt;br/&gt;{0}TABLE, BYTE&lt;br/&gt; </data>
  <data name="Processor.Error.InstructionListOne" id="235">L&amp;apos;instruction suivante est possible :</data>
  <data name="Processor.Error.InstructionListMany" id="245">Les instructions suivantes sont possibles :</data>
  <data name="Processor.Error.InstructionRegister4" id="255">&lt;i&gt;r&lt;/i&gt; = registre A, B, X, Y</data>
  <data name="Processor.Error.InstructionRegister2" id="265">&lt;i&gt;r&amp;apos;&lt;/i&gt; = registre A, B</data>
  <data name="Processor.Error.InstructionVal" id="275">&lt;i&gt;#val&lt;/i&gt; = valeur immédiate #H&amp;apos;12, #H&amp;apos;C0, #B&amp;apos;0110, #D&amp;apos;99, #99</data>
  <data name="Processor.Error.InstructionAddr" id="285">&lt;i&gt;ADDR&lt;/i&gt; = adresse H&amp;apos;C00, {PC}+H&amp;apos;DA, {PC}-3, {SP}+2, H&amp;apos;C80+{X}+{Y}</data>
  <data name="TabPage.Right.Notation.Button" id="295">Notation</data>
  <data name="TabPage.Right.Oper.Button" id="2A5">Ops</data>
  <data name="TabPage.Right.ROM.Button" id="2B5">ROM</data>
  <data name="TabPage.Right.Intro.Button" id="2C5">Intro</data>
  <data name="Help.Intro.Content" id="2D5">T:Binaire et hexadécimal &lt;br/&gt;L:(&amp;lt;i&amp;gt;décimal: binaire = hexa&amp;lt;/i&amp;gt;) &lt;br/&gt;L:  0: 0000 = H&amp;apos;0 &lt;br/&gt;L:  1: 0001 = H&amp;apos;1 &lt;br/&gt;L:  2: 0010 = H&amp;apos;2 &lt;br/&gt;L:  3: 0011 = H&amp;apos;3 &lt;br/&gt;L:  4: 0100 = H&amp;apos;4 &lt;br/&gt;L:  5: 0101 = H&amp;apos;5 &lt;br/&gt;L:  6: 0110 = H&amp;apos;6 &lt;br/&gt;L:  7: 0111 = H&amp;apos;7 &lt;br/&gt;L:  8: 1000 = H&amp;apos;8 &lt;br/&gt;L:  9: 1001 = H&amp;apos;9 &lt;br/&gt;L:10: 1010 = H&amp;apos;A &lt;br/&gt;L:11: 1011 = H&amp;apos;B &lt;br/&gt;L:12: 1100 = H&amp;apos;C &lt;br/&gt;L:13: 1101 = H&amp;apos;D &lt;br/&gt;L:14: 1110 = H&amp;apos;E &lt;br/&gt;L:15: 1111 = H&amp;apos;F &lt;br/&gt; &lt;br/&gt;T:Espace d&amp;apos;adressage &lt;br/&gt;L:[H&amp;apos;000..H&amp;apos;7FF]&amp;lt;tab/&amp;gt;RAM &lt;br/&gt;L:[H&amp;apos;800..H&amp;apos;BFF]&amp;lt;tab/&amp;gt;ROM &lt;br/&gt;L:[H&amp;apos;C00..H&amp;apos;C0F]&amp;lt;tab/&amp;gt;Périphériques &lt;br/&gt;L:[H&amp;apos;C80..H&amp;apos;CDF]&amp;lt;tab/&amp;gt;Ecran bitmap &lt;br/&gt; &lt;br/&gt;T:Affichage &lt;br/&gt;L:L&amp;apos;affichage est constitué de 4 afficheurs à 7 segments (plus un point décimal), numérotés de droite à gauche. On peut écrire une valeur pour mémoriser les digits à allumer, ou relire cette valeur. &lt;br/&gt;L:[H&amp;apos;C00]&amp;lt;tab/&amp;gt;Premier digit (celui de gauche). &lt;br/&gt;L:[H&amp;apos;C01]&amp;lt;tab/&amp;gt;Deuxième digit. &lt;br/&gt;L:[H&amp;apos;C02]&amp;lt;tab/&amp;gt;Troisième digit. &lt;br/&gt;L:[H&amp;apos;C03]&amp;lt;tab/&amp;gt;Quatrième digit (celui de droite). &lt;br/&gt;L: &lt;br/&gt;L:bit 0&amp;lt;tab/&amp;gt;Segment vertical supérieur droite. &lt;br/&gt;L:bit 1&amp;lt;tab/&amp;gt;Segment vertical inférieur droite. &lt;br/&gt;L:bit 2&amp;lt;tab/&amp;gt;Segment horizontal inférieur. &lt;br/&gt;L:bit 3&amp;lt;tab/&amp;gt;Segment vertical inférieur gauche. &lt;br/&gt;L:bit 4&amp;lt;tab/&amp;gt;Segment vertical supérieur gauche. &lt;br/&gt;L:bit 5&amp;lt;tab/&amp;gt;Segment horizontal supérieur. &lt;br/&gt;L:bit 6&amp;lt;tab/&amp;gt;Segment horizontal du milieu. &lt;br/&gt;L:bit 7&amp;lt;tab/&amp;gt;Point décimal. &lt;br/&gt;L: &lt;br/&gt;L:Constantes pour l&amp;apos;assembleur: &lt;br/&gt;L:_DIGIT0&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;= H&amp;apos;C00 &lt;br/&gt;L:_DIGIT1&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;= H&amp;apos;C01 &lt;br/&gt;L:_DIGIT2&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;= H&amp;apos;C02 &lt;br/&gt;L:_DIGIT3&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;= H&amp;apos;C03 &lt;br/&gt;L:_DIGITCOUNT&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;= D&amp;apos;4 &lt;br/&gt; &lt;br/&gt;T:Clavier &lt;br/&gt;L:En mode [NUM] (numeric), le clavier est constitué de 8 touches nommées 0..7, plus 2 touches super-shift. &lt;br/&gt;L:En mode [ARR] (arrow), le clavier est constitué de 4 touches super-shift fléchées. &lt;br/&gt;L:[H&amp;apos;C07]&amp;lt;tab/&amp;gt;Clavier. &lt;br/&gt;L: &lt;br/&gt;L:bits 0..2&amp;lt;tab/&amp;gt;Touches 0..7. &lt;br/&gt;L:bit 3&amp;lt;tab/&amp;gt;Touche Shift ou flèche en bas. &lt;br/&gt;L:bit 4&amp;lt;tab/&amp;gt;Touche Ctrl ou flèche en haut. &lt;br/&gt;L:bit 5&amp;lt;tab/&amp;gt;Touche flèche à gauche. &lt;br/&gt;L:bit 6&amp;lt;tab/&amp;gt;Touche flèche à droite. &lt;br/&gt;L:bit 7&amp;lt;tab/&amp;gt;Prend la valeur 1 lorsqu&amp;apos;une touche 0..7 est pressée. Est automatiquement remis à zéro lorsque l&amp;apos;adresse [H&amp;apos;C07] est lue. &lt;br/&gt;L: &lt;br/&gt;L:Constantes pour l&amp;apos;assembleur: &lt;br/&gt;L:_KEYBOARD&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;= H&amp;apos;C07 &lt;br/&gt;L:_KEYBOARDSHIFT&amp;lt;tab/&amp;gt;= D&amp;apos;3 &lt;br/&gt;L:_KEYBOARDCTRL&amp;lt;tab/&amp;gt;= D&amp;apos;4 &lt;br/&gt;L:_KEYBOARDDOWN&amp;lt;tab/&amp;gt;= D&amp;apos;3 &lt;br/&gt;L:_KEYBOARDUP&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;= D&amp;apos;4 &lt;br/&gt;L:_KEYBOARDLEFT&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;= D&amp;apos;5 &lt;br/&gt;L:_KEYBOARDRIGHT&amp;lt;tab/&amp;gt;= D&amp;apos;6 &lt;br/&gt;L:_KEYBOARDFULL&amp;lt;tab/&amp;gt;= D&amp;apos;7 &lt;br/&gt; &lt;br/&gt;T:Ecran bitmap &lt;br/&gt;L:L&amp;apos;écran bitmap est un écran vidéo monochrome de 32 x 24 pixels. Chaque octet représente 8 points horizontaux, avec le bit 7 à gauche. &lt;br/&gt;L: &lt;br/&gt;L:[H&amp;apos;C80..H&amp;apos;C83]&amp;lt;tab/&amp;gt;1ère ligne de 32 points. &lt;br/&gt;L:[H&amp;apos;C84..H&amp;apos;C87]&amp;lt;tab/&amp;gt;2ème ligne de 32 points. &lt;br/&gt;L:... &lt;br/&gt;L:[H&amp;apos;CDC..H&amp;apos;CDF]&amp;lt;tab/&amp;gt;24ème ligne de 32 points. &lt;br/&gt;L: &lt;br/&gt;L:Constantes pour l&amp;apos;assembleur: &lt;br/&gt;L:_BITMAP&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;= H&amp;apos;C80 &lt;br/&gt;L:_BITMAPWIDTH&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;= D&amp;apos;32 &lt;br/&gt;L:_BITMAPHEIGHT&amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;= D&amp;apos;24 &lt;br/&gt;</data>
  <data name="Help.Notation.Content" id="2E5">T:Registre &lt;br/&gt;L:&amp;lt;b&amp;gt;[xx+r]      &amp;lt;tab/&amp;gt;&amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;&amp;lt;/b&amp;gt; &lt;br/&gt;L:&amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;=0            &amp;lt;tab/&amp;gt;A &lt;br/&gt;L:&amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;=1            &amp;lt;tab/&amp;gt;B &lt;br/&gt;L:&amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;=2            &amp;lt;tab/&amp;gt;X &lt;br/&gt;L:&amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;=3            &amp;lt;tab/&amp;gt;Y &lt;br/&gt;L: &lt;br/&gt;L:&amp;lt;b&amp;gt;[xx+r&amp;apos;]     &amp;lt;tab/&amp;gt;&amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;&amp;lt;/b&amp;gt; &lt;br/&gt;L:&amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;=0           &amp;lt;tab/&amp;gt;A &lt;br/&gt;L:&amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;=1           &amp;lt;tab/&amp;gt;B &lt;br/&gt; &lt;br/&gt;T:Valeur immédiate &lt;br/&gt;L:&amp;lt;b&amp;gt;[vv]         &amp;lt;tab/&amp;gt;&amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;&amp;lt;/b&amp;gt; &lt;br/&gt;L:vv              &amp;lt;tab/&amp;gt;Valeur positive 8 bits. &lt;br/&gt; &lt;br/&gt;T:Adresse &lt;br/&gt;L:&amp;lt;b&amp;gt;[mh] [ll]    &amp;lt;tab/&amp;gt;&amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;&amp;lt;/b&amp;gt; &lt;br/&gt;L:m=0             &amp;lt;tab/&amp;gt;Adresse absolue 12 bits &lt;br/&gt;L:m=1             &amp;lt;tab/&amp;gt;+{X} &lt;br/&gt;L:m=2             &amp;lt;tab/&amp;gt;+{Y} &lt;br/&gt;L:m=4             &amp;lt;tab/&amp;gt;{SP}+depl &lt;br/&gt;L:m=8             &amp;lt;tab/&amp;gt;{PC}+depl (± adresse relative) &lt;br/&gt;L: &lt;br/&gt;L:&amp;lt;b&amp;gt;Exemples&amp;lt;/b&amp;gt; &lt;br/&gt;L:[54] [0C] [07]  &amp;lt;tab/&amp;gt;MOVE H&amp;apos;C07, A &lt;br/&gt;L:[58] [1C] [00]  &amp;lt;tab/&amp;gt;MOVE A, H&amp;apos;C00+{X} &lt;br/&gt;L:[10] [80] [10]  &amp;lt;tab/&amp;gt;JUMP {PC}+10 (saute 10 octets) &lt;br/&gt;L:[10] [8F] [FD]  &amp;lt;tab/&amp;gt;JUMP {PC}-3 (boucle infinie) &lt;br/&gt;L:[54] [40] [02]  &amp;lt;tab/&amp;gt;MOVE {SP}+2, A &lt;br/&gt;</data>
  <data name="Help.Oper.Content" id="2F5">T:Transferts &lt;br/&gt;L:[40+r]          &amp;lt;tab/&amp;gt;MOVE A, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[44+r]          &amp;lt;tab/&amp;gt;MOVE B, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[48+r]          &amp;lt;tab/&amp;gt;MOVE X, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[4C+r]          &amp;lt;tab/&amp;gt;MOVE Y, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[50+r] [vv]     &amp;lt;tab/&amp;gt;MOVE &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt; &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[54+r] [mh] [ll]&amp;lt;tab/&amp;gt;MOVE &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt; &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[58+r] [mh] [ll]&amp;lt;tab/&amp;gt;MOVE &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[DC] [vv] [mh] [ll] MOVE &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt; &lt;br/&gt;T:Additions &lt;br/&gt;L:[80+r]          &amp;lt;tab/&amp;gt;ADD A, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[84+r]          &amp;lt;tab/&amp;gt;ADD B, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[88+r]          &amp;lt;tab/&amp;gt;ADD X, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[8C+r]          &amp;lt;tab/&amp;gt;ADD Y, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[A0+r] [vv]     &amp;lt;tab/&amp;gt;ADD &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt; &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[B0+r] [mh] [ll]&amp;lt;tab/&amp;gt;ADD &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt; &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[B8+r] [mh] [ll]&amp;lt;tab/&amp;gt;ADD &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[DE] [vv] [mh] [ll] ADD &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt; &lt;br/&gt;T:Soustractions &lt;br/&gt;L:[90+r]          &amp;lt;tab/&amp;gt;SUB A, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[94+r]          &amp;lt;tab/&amp;gt;SUB B, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[98+r]          &amp;lt;tab/&amp;gt;SUB X, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[9C+r]          &amp;lt;tab/&amp;gt;SUB Y, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[A4+r] [vv]     &amp;lt;tab/&amp;gt;SUB &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[B4+r] [mh] [ll]&amp;lt;tab/&amp;gt;SUB &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[BC+r] [mh] [ll]&amp;lt;tab/&amp;gt;SUB &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[DF] [vv] [mh] [ll] SUB &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt; &lt;br/&gt;T:ET logique &lt;br/&gt;L:[E0]             &amp;lt;tab/&amp;gt;AND A, B      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[E1]             &amp;lt;tab/&amp;gt;AND B, A      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[74+r] [vv]      &amp;lt;tab/&amp;gt;AND &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;   &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[E8+r&amp;apos;] [mh] [ll]&amp;lt;tab/&amp;gt;AND &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[F0+r&amp;apos;] [mh] [ll]&amp;lt;tab/&amp;gt;AND &amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt; &lt;br/&gt;T:OU logique &lt;br/&gt;L:[E2]             &amp;lt;tab/&amp;gt;OR A, B      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[E3]             &amp;lt;tab/&amp;gt;OR B, A      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[78+r] [vv]      &amp;lt;tab/&amp;gt;OR &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;   &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[EA+r&amp;apos;] [mh] [ll]&amp;lt;tab/&amp;gt;OR &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[F2+r&amp;apos;] [mh] [ll]&amp;lt;tab/&amp;gt;OR &amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt; &lt;br/&gt;T:OU exclusif logique &lt;br/&gt;L:[E4]             &amp;lt;tab/&amp;gt;XOR A, B      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[E5]             &amp;lt;tab/&amp;gt;XOR B, A      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[7C+r] [vv]      &amp;lt;tab/&amp;gt;XOR &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;   &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[EC+r&amp;apos;] [mh] [ll]&amp;lt;tab/&amp;gt;XOR &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[F4+r&amp;apos;] [mh] [ll]&amp;lt;tab/&amp;gt;XOR &amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt; &lt;br/&gt;T:Test de bit &lt;br/&gt;L:[C0]             &amp;lt;tab/&amp;gt;TEST B :A      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[C1]             &amp;lt;tab/&amp;gt;TEST A :B      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[D0+r&amp;apos;] [vv]     &amp;lt;tab/&amp;gt;TEST &amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[C8+r&amp;apos;] [mh] [ll]&amp;lt;tab/&amp;gt;TEST &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[D8] [vv] [mh] [ll] TEST &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;   &amp;lt;tab/&amp;gt;(Z) &lt;br/&gt; &lt;br/&gt;T:Test de bit et mise à un &lt;br/&gt;L:[C2]             &amp;lt;tab/&amp;gt;TSET B :A      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[C3]             &amp;lt;tab/&amp;gt;TSET A :B      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[D2+r&amp;apos;] [vv]     &amp;lt;tab/&amp;gt;TSET &amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[CA+r&amp;apos;] [mh] [ll]&amp;lt;tab/&amp;gt;TSET &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[D9] [vv] [mh] [ll] TSET &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;   &amp;lt;tab/&amp;gt;(Z) &lt;br/&gt; &lt;br/&gt;T:Test de bit et mise à zéro &lt;br/&gt;L:[C4]             &amp;lt;tab/&amp;gt;TCLR B :A      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[C5]             &amp;lt;tab/&amp;gt;TCLR A :B      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[D4+r&amp;apos;] [vv]     &amp;lt;tab/&amp;gt;TCLR &amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[CC+r&amp;apos;] [mh] [ll]&amp;lt;tab/&amp;gt;TCLR &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[DA] [vv] [mh] [ll] TCLR &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;   &amp;lt;tab/&amp;gt;(Z) &lt;br/&gt; &lt;br/&gt;T:Test de bit et inversion &lt;br/&gt;L:[C6]             &amp;lt;tab/&amp;gt;TNOT B :A      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[C7]             &amp;lt;tab/&amp;gt;TNOT A :B      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[D6+r&amp;apos;] [vv]     &amp;lt;tab/&amp;gt;TNOT &amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[CE+r&amp;apos;] [mh] [ll]&amp;lt;tab/&amp;gt;TNOT &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;r&amp;apos;&amp;lt;/i&amp;gt;  &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(Z) &lt;br/&gt;L:[DB] [vv] [mh] [ll] TNOT &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; :&amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;   &amp;lt;tab/&amp;gt;(Z) &lt;br/&gt; &lt;br/&gt;T:Comparaisons &lt;br/&gt;L:[60+r]          &amp;lt;tab/&amp;gt;COMP A, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[64+r]          &amp;lt;tab/&amp;gt;COMP B, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[68+r]          &amp;lt;tab/&amp;gt;COMP X, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[6C+r]          &amp;lt;tab/&amp;gt;COMP Y, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[70+r] [vv]     &amp;lt;tab/&amp;gt;COMP &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt; &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[F8+r] [mh] [ll]&amp;lt;tab/&amp;gt;COMP &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt; &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[DD] [vv] [mh] [ll] COMP &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt; &lt;br/&gt;T:Opérations unaires &lt;br/&gt;L:[20+r]          &amp;lt;tab/&amp;gt;CLR &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;       &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N=0, Z=0) &lt;br/&gt;L:[24+r]          &amp;lt;tab/&amp;gt;NOT &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;       &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[28+r]          &amp;lt;tab/&amp;gt;INC &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;       &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[2C+r]          &amp;lt;tab/&amp;gt;DEC &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;       &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[A8] [mh] [ll]  &amp;lt;tab/&amp;gt;CLR &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;    &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N=0, Z=0) &lt;br/&gt;L:[A9] [mh] [ll]  &amp;lt;tab/&amp;gt;NOT &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;    &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[AA] [mh] [ll]  &amp;lt;tab/&amp;gt;INC &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;    &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[AB] [mh] [ll]  &amp;lt;tab/&amp;gt;DEC &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;    &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt; &lt;br/&gt;T:Rotations &lt;br/&gt;L:[30+r]          &amp;lt;tab/&amp;gt;RL &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;          &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[34+r]          &amp;lt;tab/&amp;gt;RR &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;          &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[38+r]          &amp;lt;tab/&amp;gt;RLC &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;         &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[3C+r]          &amp;lt;tab/&amp;gt;RRC &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;         &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[AC] [mh] [ll]  &amp;lt;tab/&amp;gt;RL &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;       &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[AD] [mh] [ll]  &amp;lt;tab/&amp;gt;RR &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;       &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[AE] [mh] [ll]  &amp;lt;tab/&amp;gt;RLC &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[AF] [mh] [ll]  &amp;lt;tab/&amp;gt;RRC &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt;      &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt; &lt;br/&gt;T:Sauts &lt;br/&gt;L:[10] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[12] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,EQ &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[12] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,ZS &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[13] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,NE &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[13] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,ZC &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[14] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,LO &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[14] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,CS &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[15] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,HS &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[15] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,CC &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[16] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,LS &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[17] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,HI &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[18] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,NS &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[19] [mh] [ll]&amp;lt;tab/&amp;gt;JUMP,NC &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt; &lt;br/&gt;T:Appels de routines &lt;br/&gt;L:[01] [mh] [ll]   &amp;lt;tab/&amp;gt;CALL &amp;lt;i&amp;gt;ADDR&amp;lt;/i&amp;gt; &lt;br/&gt;L:[02]             &amp;lt;tab/&amp;gt;RET &lt;br/&gt; &lt;br/&gt;T:Utilisation de la pile &lt;br/&gt;L:[08+r]           &amp;lt;tab/&amp;gt;PUSH &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt; &lt;br/&gt;L:[FC]             &amp;lt;tab/&amp;gt;PUSH F &lt;br/&gt;L:[0C+r]           &amp;lt;tab/&amp;gt;POP &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt; &lt;br/&gt;L:[FD]             &amp;lt;tab/&amp;gt;POP F                     &amp;lt;tab/&amp;gt;(N, Z, C) &lt;br/&gt;L:[07] [vv]        &amp;lt;tab/&amp;gt;SUB &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, SP &lt;br/&gt;L:[06] [vv]        &amp;lt;tab/&amp;gt;ADD &amp;lt;i&amp;gt;#val&amp;lt;/i&amp;gt;, SP &lt;br/&gt;L:[54+r] [40] [dd] &amp;lt;tab/&amp;gt;MOVE {SP}+depl, &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt; &amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt;L:[58+r] [40] [dd] &amp;lt;tab/&amp;gt;MOVE &amp;lt;i&amp;gt;r&amp;lt;/i&amp;gt;, {SP}+depl &amp;lt;tab/&amp;gt;(N, Z) &lt;br/&gt; &lt;br/&gt;T:Gestion des fanions &lt;br/&gt;L:[04]             &amp;lt;tab/&amp;gt;SETC           &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(C=1) &lt;br/&gt;L:[05]             &amp;lt;tab/&amp;gt;CLRC           &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(C=0) &lt;br/&gt;L:[FE]             &amp;lt;tab/&amp;gt;NOTC           &amp;lt;tab/&amp;gt;&amp;lt;tab/&amp;gt;(C) &lt;br/&gt; &lt;br/&gt;T:Divers &lt;br/&gt;L:[00]            &amp;lt;tab/&amp;gt;NOP &lt;br/&gt;L:[03]            &amp;lt;tab/&amp;gt;HALT &lt;br/&gt;L:[5C]            &amp;lt;tab/&amp;gt;EX A, B &lt;br/&gt;L:[5D]            &amp;lt;tab/&amp;gt;EX X, Y &lt;br/&gt;L:[5E]            &amp;lt;tab/&amp;gt;SWAP A &lt;br/&gt;L:[5F]            &amp;lt;tab/&amp;gt;SWAP B &lt;br/&gt;</data>
  <data name="Help.ROM.Content" id="2G5">T:_WaitKey &lt;br/&gt;L:Attend la pression d&amp;apos;une touche du clavier. &lt;br/&gt;L:[01] [08] [03]&amp;lt;tab/&amp;gt;CALL H&amp;apos;803 &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;A touche pressée &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;A, F &lt;br/&gt; &lt;br/&gt;T:_WaitSec &lt;br/&gt;L:Attend un nombre de demi-secondes. L&amp;apos;attente est approximativement calibrée à 1&amp;apos;000 IPS. &lt;br/&gt;L:[01] [08] [06]&amp;lt;tab/&amp;gt;CALL H&amp;apos;806 &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;A nombre de secondes &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt; &lt;br/&gt;T:_DisplayBinaryDigit &lt;br/&gt;L:Affiche des segments à choix. &lt;br/&gt;L:[01] [08] [09]&amp;lt;tab/&amp;gt;CALL H&amp;apos;809 &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;A bits des segments à allumer &lt;br/&gt;L:&amp;lt;tab/&amp;gt;B digit 0..3 (de gauche à droite) &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt; &lt;br/&gt;T:_DisplayHexaDigit &lt;br/&gt;L:Affiche un digit hexadécimal. &lt;br/&gt;L:[01] [08] [0C]&amp;lt;tab/&amp;gt;CALL H&amp;apos;80C &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;A valeur 0..15 &lt;br/&gt;L:&amp;lt;tab/&amp;gt;B digit 0..3 (de gauche à droite) &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt; &lt;br/&gt;T:_DisplayHexaByte &lt;br/&gt;L:Affiche un octet hexadécimal sur deux digits. &lt;br/&gt;L:[01] [08] [0F]&amp;lt;tab/&amp;gt;CALL H&amp;apos;80F &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;A valeur 0..255 &lt;br/&gt;L:&amp;lt;tab/&amp;gt;B premier digit 0..2 (de gauche à droite) &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt; &lt;br/&gt;T:_ClearScreen &lt;br/&gt;L:Efface tout l&amp;apos;écran bitmap. &lt;br/&gt;L:[01] [08] [1E]&amp;lt;tab/&amp;gt;CALL H&amp;apos;81E &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt; &lt;br/&gt;T:_SetPixel &lt;br/&gt;L:Allume un pixel dans l&amp;apos;écran bitmap. &lt;br/&gt;L:[01] [08] [15]&amp;lt;tab/&amp;gt;CALL H&amp;apos;815 &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;X coordonnée colonne 0..31 &lt;br/&gt;L:&amp;lt;tab/&amp;gt;Y coordonnée ligne 0..23 &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt; &lt;br/&gt;T:_ClrPixel &lt;br/&gt;L:Eteint un pixel dans l&amp;apos;écran bitmap. &lt;br/&gt;L:[01] [08] [18]&amp;lt;tab/&amp;gt;CALL H&amp;apos;818 &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;X coordonnée colonne 0..31 &lt;br/&gt;L:&amp;lt;tab/&amp;gt;Y coordonnée ligne 0..23 &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt; &lt;br/&gt;T:_NotPixel &lt;br/&gt;L:Inverse un pixel dans l&amp;apos;écran bitmap. &lt;br/&gt;L:[01] [08] [1B]&amp;lt;tab/&amp;gt;CALL H&amp;apos;81B &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;X coordonnée colonne 0..31 &lt;br/&gt;L:&amp;lt;tab/&amp;gt;Y coordonnée ligne 0..23 &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt; &lt;br/&gt;T:_TestPixel &lt;br/&gt;L:Teste l&amp;apos;état d&amp;apos;un pixel dans l&amp;apos;écran bitmap. &lt;br/&gt;L:[01] [08] [2A]&amp;lt;tab/&amp;gt;CALL H&amp;apos;82A &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;X coordonnée colonne 0..31 &lt;br/&gt;L:&amp;lt;tab/&amp;gt;Y coordonnée ligne 0..23 &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;EQ si le pixel est éteint &lt;br/&gt;L:&amp;lt;tab/&amp;gt;NE si le pixel est allumé &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt; &lt;br/&gt;T:_DrawChar &lt;br/&gt;L:Dessine un caractère dans l&amp;apos;écran bitmap. Les chiffres sont codés de 30 à 39, et les lettres de 41 à 5A. &lt;br/&gt;L:[01] [08] [21]&amp;lt;tab/&amp;gt;CALL H&amp;apos;821 &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;A caractère ascii &lt;br/&gt;L:&amp;lt;tab/&amp;gt;X colonne 0..7 &lt;br/&gt;L:&amp;lt;tab/&amp;gt;Y ligne 0..3 &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt; &lt;br/&gt;T:_DrawHexaDigit &lt;br/&gt;L:Dessine un digit hexadécimal dans l&amp;apos;écran bitmap. &lt;br/&gt;L:[01] [08] [24]&amp;lt;tab/&amp;gt;CALL H&amp;apos;824 &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;A valeur 0..15 &lt;br/&gt;L:&amp;lt;tab/&amp;gt;X colonne 0..7 &lt;br/&gt;L:&amp;lt;tab/&amp;gt;Y ligne 0..3 &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt; &lt;br/&gt;T:_DrawHexaByte &lt;br/&gt;L:Dessine un octet hexadécimal sur deux digits dans l&amp;apos;écran bitmap. &lt;br/&gt;L:[01] [08] [27]&amp;lt;tab/&amp;gt;CALL H&amp;apos;827 &lt;br/&gt;L:in&amp;lt;tab/&amp;gt;A valeur 0..255 &lt;br/&gt;L:&amp;lt;tab/&amp;gt;X colonne 0..6 &lt;br/&gt;L:&amp;lt;tab/&amp;gt;Y ligne 0..3 &lt;br/&gt;L:out&amp;lt;tab/&amp;gt;- &lt;br/&gt;L:mod&amp;lt;tab/&amp;gt;F &lt;br/&gt;</data>
  <data name="Path.OriginalSamples" id="1" about="Ceci correspond au nom du dossier qui contient les exemples dans le projet.">Samples (fr)</data>
  <data name="Path.UserSamples" id="11" about="Ceci correspond au nom du sous-dossier dans &amp;quot;Mes documents&amp;quot; où les exemples de sources Dauphin seront copiés...">Epsitec\Dauphin</data>
  <data name="Path.ApplicationName" id="12">Dauphin</data>
  <data name="Dialog.About.Web.Epsitec" id="2H5">www.epsitec.ch</data>
  <data name="Dialog.About.Web.Dauphin" id="2I5">www.epsitec.ch/dauphin</data>
</bundle>